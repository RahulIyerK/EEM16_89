//--------------------------------------------------------------------
//		Timescale
//		Means that if you do #1 in the initial block of your
//		testbench, time is advanced by 1ns instead of 1ps
//--------------------------------------------------------------------
`timescale 1ns / 1ps

//--------------------------------------------------------------------
//		Design Assign #1, Problem #3 Testbench.
//--------------------------------------------------------------------
module dassign1_3_tb();
//----------------------------------------------------------------
//		Signal Declarations
//----------------------------------------------------------------
reg[3:0] x;
  
integer i;
wire y;
  
reg a, b, c, d;
reg y1;


// 
// add as you need
// 
	
//----------------------------------------------------------------
//		Instantiate modules Module
//----------------------------------------------------------------
dassign1_3	dassign1_3_1(y,x);
//----------------------------------------------------------------
//		Test Stimulus
//----------------------------------------------------------------
initial begin
a=0;b=0;c=0;d=0;

  for(i=4'b0;i<15;i=i+1) begin
    x = i;
    #2
    
    a = i[3];
    b = i[2];
    c = i[1];
    d = i[0];

    #1
     
    y1 = (~a & c & d) | (~a & b & c) | (a & ~b & d) | (a & ~b & c);
    
    if (y1 !== y)
    begin
      $monitor ("%b %b %b %b : y1 not equal to y: y1 %b , y %b", a, b, c, d, y1, y);
    end

   end
end
endmodule